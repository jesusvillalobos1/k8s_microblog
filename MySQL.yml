apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: microblog
    tier: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microblog
      tier: mysql
  template:
    metadata:
      labels:
        app: microblog
        tier: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.6
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - mountPath: "/var/lib/mysql"
              subPath: "mysql"
              name: mysql-data
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-disk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: | #The SQL statements to run to initialize a new database connection immediately after opening it.
    create database microblog character set utf8 collate utf8_bin;
    create user 'microblog'@'%' identified by 'microdbpwd';
    grant all privileges on microblog.* to 'microblog'@'%';
    flush privileges;
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: microblog-mysql-service
  labels:
    app: microblog
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: microblog
    tier: mysql